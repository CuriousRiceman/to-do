* {
    margin: 0;
    padding: 0;
}

.header-container {
    border: 2px solid black;
    height: 10vh;
    width: 100vw;
    display: flex;
    align-items: center;
    justify-content: center;
}

.header {
    border: 2px solid black;
}

.main-container {
    border: 2px solid black;
    height: 90vh;
    width: 100vw;
    display: flex;
}

.sidebar-container {
    border: 2px solid black;
    width: 25%;
    display: flex;
    flex-direction: column;
}

.side-header {
    border: 2px solid black;
    width: 100%;
    display: flex;
    flex-direction: row;
}

.add-task, .add-project {
    display: inline-block;
    margin: 10% 5% 10% 10%;
}

.add-task-button, .add-project-button {
    width: 150px; /* Pixels in this case to preserve width regardless of viewport resizing */
    /* overflow-wrap: break-word; /* Assuming you use % for width, this will prevent overflow but it looks weird if you resize the width to a small size */
}

.sidebar-list {
    border: 2px solid black;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* overflow-wrap: break-word; /* prevent overflow to other divs if text is long, can set to 'anywhere' as well, has different behavior in certain cases */
}

.list-project-button {
    border: 2px solid black;
    margin: 0.5rem 0;
    width: 75%;
}

#new-task-dialog, #new-project-dialog { /* Since I removed all margin and padding at top (css reset) */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 1em;
}

#task-form, #project-form {
    display: flex;
    flex-direction: column;
}

#task-form > div:not(:last-child) {
    margin: 5px;
    display: flex;
    flex-direction: column; /* Default is row, hence main axis is horizontal, cross axis is vertical, but if set to column, it switches, hence I use align-items */
    align-items: center;
    gap: 5px;
}

.form-container-one {

}

.form-container-two  {

}

.submit-or-cancel {
    display: flex;
    justify-content: space-between;
    margin-top: 5px;
}

.to-do-list-container {
    border: 2px solid black;
    width: 75%;
    padding: 1rem;
}

.project-task-header {
    border: 2px solid black;
    width: 100%;
    height: 10%;
    align-content: center;
}

.tasks-display {
    display: grid; /* If using flex, use flex-wrap to allow cards to wrap to next line */
    gap: 1em;
    border: 2px solid black;
    width: 100%;
    margin: 1em 0;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* minmax(300px 1,fr) means min width of 300px, maximum width of 1fr which is a fraction of remaining space */
    /* Auto-fit creates columns that stretch to fit the available space, auto-fill may leave empty space at end if not filled entirely */
    grid-template-rows: repeat(auto-fill, minmax(225px, 1fr));
    overflow-y: scroll;
    height: 80%;
    padding: 1em;
    box-sizing: border-box; /* Since I set width using percent, and don't include padding/border (border-box), it will overflow */
}

.task-container { /* The card */
    border: 2px solid black; /* If using flex, set flex: 1 1 auto to allow cards to grow and shrink */
    overflow-wrap: break-word;
    /* width: 20%; DO NOT set width if using grid to format since it conflicts and causes issues */
    padding: 1rem;
    box-sizing: border-box; /* padding and border included in width */
}

/* Can definitely set description header and then description text below */
/* Thought: Put "Add new task" button along side the project header */
.task-container p:nth-child(2) {
    height: 75px;
    overflow-y: scroll; /* So the long description doesn't make a ridiculous height */
    border: 1px solid black;
}

.delete-project-button {
    position: relative;
    float: right;
    margin-right: 5px;
    border-style: none;
}